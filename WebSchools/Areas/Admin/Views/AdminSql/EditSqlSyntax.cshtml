@using WebSchools.Models.JavaScript
@model WebSchools.Models.JavaScript.SqlSyntaxBox

@{
    ViewBag.Title = "Edit Sql Syntax";
    Layout = "~/Areas/Admin/Views/Shared/_adminSql.cshtml";
    SqlSyntaxBox ssb = ViewBag.SSB;
}

@Html.Partial("~/Views/Shared/_admin_top_header.cshtml", null)

<div class="form_head">
    <h2>Edit SQL Syntax</h2>
    <span><b>Current Slug :: </b>@ssb.Slug</span>
</div>
<div class="well-sm form-group status">
    @if (ViewBag.Error != null)
    {
        <div class="text-danger">@Html.Raw(ViewBag.Error)</div>
    }
    @if (ViewBag.Success != null)
    {
        <div class="text-success">@Html.Raw(ViewBag.Success)</div>
    }
</div>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)


        <div class="form-group">
            @Html.LabelFor(model => model.Slug, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-9">
                <select id="sqlSlug" name="Slug" class="form-control">
                    <option id="0" value="none">Select SQl Slug</option>
                    @foreach (SqlIndex si in ViewBag.SqlIdices)
                    {
                        <option id="@si.Id" value="@si.Slug">@si.Slug</option>
                    }
                </select>
                @Html.ValidationMessageFor(model => model.Slug, "", new { @class = "text-danger" })
            </div>
        </div>


        <input type="text" name="SqlIndexId" id="sqlIndexId" value="" hidden />

        <div class="form-group">
            @Html.LabelFor(model => model.SubHeading, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.SubHeading, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SubHeading, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SqlSyntax, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-9">
                @Html.TextAreaFor(model => model.SqlSyntax, 5, 5, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SqlSyntax, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SqlSyntaxDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-9">
                @Html.TextAreaFor(model => model.SqlSyntaxDescription, 5, 5, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SqlSyntaxDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <input type="text" name="ActiveStatus" value="false" hidden />
        <input type="text" name="AdminId" value="@Session["SqlAdminId"]" hidden />
        <input type="text" name="Date" value="@System.DateTime.Now" hidden />

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Update" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            $('#sqlSlug').change(function () {
                var sqlIndexId = $(this).children(":selected").attr('id');
                $('#sqlIndexId').attr('value', sqlIndexId);
            });
        });
    </script>
}
